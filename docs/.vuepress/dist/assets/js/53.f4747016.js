(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{367:function(v,_,e){"use strict";e.r(_);var t=e(7),a=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"tcp与udp异同"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp与udp异同"}},[v._v("#")]),v._v(" TCP与UDP异同")]),v._v(" "),_("p",[_("code",[v._v("TCP/IP")]),v._v("模型的运输层有两个不同的协议："),_("code",[v._v("UDP")]),v._v("用户数据报协议与"),_("code",[v._v("TCP")]),v._v("传输控制协议。")]),v._v(" "),_("h2",{attrs:{id:"相同点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#相同点"}},[v._v("#")]),v._v(" 相同点")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("TCP")]),v._v("与"),_("code",[v._v("UDP")]),v._v("都是运行在运输层的协议。")]),v._v(" "),_("li",[_("code",[v._v("TCP")]),v._v("与"),_("code",[v._v("UDP")]),v._v("的通信都需要开放端口。")])]),v._v(" "),_("h2",{attrs:{id:"不同点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#不同点"}},[v._v("#")]),v._v(" 不同点")]),v._v(" "),_("h3",{attrs:{id:"tcp"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp"}},[v._v("#")]),v._v(" TCP")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("TCP")]),v._v("是面向连接的协议，提供全双工通信，需要建立链接之后再传输数据，数据传输负载相对较大。")]),v._v(" "),_("li",[_("code",[v._v("TCP")]),v._v("提供可靠交付的服务，使用流量控制和拥塞控制等服务保证可靠通信。")]),v._v(" "),_("li",[_("code",[v._v("TCP")]),v._v("首部最小"),_("code",[v._v("20")]),v._v("字节，最大"),_("code",[v._v("60")]),v._v("字节，包括源端口、目的端口、序号、确认号、数据偏移、控制标志、窗口、校验和、紧急指针、选项等信息。")]),v._v(" "),_("li",[_("code",[v._v("TCP")]),v._v("只能是一对一通信。")]),v._v(" "),_("li",[_("code",[v._v("TCP")]),v._v("面向字节流通信。")]),v._v(" "),_("li",[_("code",[v._v("TCP")]),v._v("保证数据传输的顺序，通过给"),_("code",[v._v("TCP")]),v._v("连接中传送数据流的每个字节都编上序号来确定传输顺序。")]),v._v(" "),_("li",[_("code",[v._v("TCP")]),v._v("提供校验和、确认应答、序列号、超时重传、连接管理、流量控制、拥塞控制等功能。")]),v._v(" "),_("li",[_("code",[v._v("TCP")]),v._v("适用于要求可靠传输的应用，如文件传输等")])]),v._v(" "),_("h3",{attrs:{id:"udp"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#udp"}},[v._v("#")]),v._v(" UDP")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("UDP")]),v._v("是无连接的，即发送数据之前不需要建立连接，数据传输负载相对较小。")]),v._v(" "),_("li",[_("code",[v._v("UDP")]),v._v("使用尽最大努力交付，即不保证可靠交付，同时也不使用流量控制和拥塞控制。")]),v._v(" "),_("li",[_("code",[v._v("UDP")]),v._v("首部"),_("code",[v._v("8")]),v._v("字节，包括源端口、目的端口、长度、校验和信息。")]),v._v(" "),_("li",[_("code",[v._v("UDP")]),v._v("具有单播、多播、广播的功能，支持一对一、一对多、多对多、多对一的数据传输方式。")]),v._v(" "),_("li",[_("code",[v._v("UDP")]),v._v("是面向报文通信，对应用层交下来的报文，既不合并，也不拆分，而是保留这些报文的边界，在添加首部后就向下交付"),_("code",[v._v("IP")]),v._v("层。")]),v._v(" "),_("li",[_("code",[v._v("UDP")]),v._v("不保证数据传输的顺序，需要应用层程序在数据段加入序号等方式控制顺序。")]),v._v(" "),_("li",[_("code",[v._v("UDP")]),v._v("只在"),_("code",[v._v("IP")]),v._v("的数据报服务之上增加了很少一点的功能，即端口的功能和差错检测的功能。")]),v._v(" "),_("li",[_("code",[v._v("UDP")]),v._v("适用于实时应用，如网络电话、视频会议、直播等")])]),v._v(" "),_("h2",{attrs:{id:"相关问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#相关问题"}},[v._v("#")]),v._v(" 相关问题")]),v._v(" "),_("h3",{attrs:{id:"udp实现可靠性传输"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#udp实现可靠性传输"}},[v._v("#")]),v._v(" UDP实现可靠性传输")]),v._v(" "),_("p",[v._v("运输层无法保证数据的可靠传输，只能通过应用层来实现了，实现的方式可以参照"),_("code",[v._v("TCP")]),v._v("可靠性传输的方式，只是实现不在传输层，实现转移到了应用层，主要通过实现确认机制、重传机制、窗口确认等机制来实现可靠传输，有"),_("code",[v._v("RUDP")]),v._v("、"),_("code",[v._v("RTP")]),v._v("、"),_("code",[v._v("UDT")]),v._v("等开源程序利用"),_("code",[v._v("UDP")]),v._v("实现了可靠的数据传输，此外有结合"),_("code",[v._v("TCP")]),v._v("的可靠与"),_("code",[v._v("UDP")]),v._v("速度的权衡"),_("code",[v._v("KCP")]),v._v("协议。")]),v._v(" "),_("h3",{attrs:{id:"tcp短连接和长连接的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp短连接和长连接的区别"}},[v._v("#")]),v._v(" TCP短连接和长连接的区别")]),v._v(" "),_("p",[v._v("短连接："),_("code",[v._v("Client")]),v._v("向"),_("code",[v._v("Server")]),v._v("发送消息，"),_("code",[v._v("Server")]),v._v("回应"),_("code",[v._v("Client")]),v._v("，然后一次读写就完成了，这时候双方任何一个都可以发起"),_("code",[v._v("close")]),v._v("操作，不过一般都是"),_("code",[v._v("Client")]),v._v("先发起"),_("code",[v._v("close")]),v._v("操作。短连接一般只会在"),_("code",[v._v("Client/Server")]),v._v("间传递一次读写操作。短链接管理起来比较简单，建立存在的连接都是有用的连接，不需要额外的控制手段，但是如果客户请求频繁，将在"),_("code",[v._v("TCP")]),v._v("的建立和关闭操作上浪费时间和带宽。"),_("br"),v._v("\n长连接："),_("code",[v._v("Client")]),v._v("与"),_("code",[v._v("Server")]),v._v("完成一次读写之后，它们之间的连接并不会主动关闭，后续的读写操作会继续使用这个连接，长连接可以省去较多的"),_("code",[v._v("TCP")]),v._v("建立和关闭的操作，减少浪费，节约时间，对于频繁请求资源的客户来说，较适用长连接，但是随着客户端连接越来越多，"),_("code",[v._v("Server")]),v._v("负载会越来越大，此时就需要采取一些策略减少负载，例如关闭长时间未读写的链接"),_("code",[v._v("LRU")]),v._v("算法、限制客户端链接数量等。")]),v._v(" "),_("h3",{attrs:{id:"tcp粘包拆包解决方案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp粘包拆包解决方案"}},[v._v("#")]),v._v(" TCP粘包拆包解决方案")]),v._v(" "),_("p",[v._v("由于"),_("code",[v._v("TCP")]),v._v("本身是面向字节流的，无法理解上层的业务数据，所以在底层是无法保证数据包不被拆分和重组的，这个问题只能通过上层的应用协议栈设计来解决。")]),v._v(" "),_("ul",[_("li",[v._v("消息定长：发送端将每个数据包封装为固定长度（不够的可以通过补"),_("code",[v._v("0")]),v._v("填充），这样接收端每次接收缓冲区中读取固定长度的数据就自然而然的把每个数据包拆分开来。")]),v._v(" "),_("li",[v._v("设置消息边界：服务端从网络流中按消息边界分离出消息内容，在包尾增加回车换行符进行分割，例如"),_("code",[v._v("FTP")]),v._v("协议。")]),v._v(" "),_("li",[v._v("将消息分为消息头和消息体：消息头中包含表示消息总长度（或者消息体长度）的字段。")])]),v._v(" "),_("h2",{attrs:{id:"每日一题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#每日一题"}},[v._v("#")]),v._v(" 每日一题")]),v._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("https://github.com/WindrunnerMax/EveryDay\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br")])]),_("h2",{attrs:{id:"参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[v._v("#")]),v._v(" 参考")]),v._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("https://zhuanlan.zhihu.com/p/108822858\nhttps://www.cnblogs.com/liangyc/p/11628148.html\nhttps://blog.csdn.net/m_xiaoer/article/details/72885418\nhttps://blog.csdn.net/pangyemeng/article/details/50387078\nhttps://blog.csdn.net/quiet_girl/article/details/50599777\nhttps://blog.csdn.net/liuchenxia8/article/details/80428157\nhttps://blog.csdn.net/qq_40732350/article/details/90902396\nhttps://www.cnblogs.com/fundebug/p/differences-of-tcp-and-udp.html\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br"),_("span",{staticClass:"line-number"},[v._v("2")]),_("br"),_("span",{staticClass:"line-number"},[v._v("3")]),_("br"),_("span",{staticClass:"line-number"},[v._v("4")]),_("br"),_("span",{staticClass:"line-number"},[v._v("5")]),_("br"),_("span",{staticClass:"line-number"},[v._v("6")]),_("br"),_("span",{staticClass:"line-number"},[v._v("7")]),_("br"),_("span",{staticClass:"line-number"},[v._v("8")]),_("br")])])])}),[],!1,null,null,null);_.default=a.exports}}]);