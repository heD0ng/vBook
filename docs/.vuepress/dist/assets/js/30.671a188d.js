(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{342:function(s,a,n){"use strict";n.r(a);var e=n(7),t=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"webpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[s._v("#")]),s._v(" Webpack")]),s._v(" "),a("p",[s._v("Webpack 是一个模块打包工具，它可以将多个模块打包成一个文件，以便于在浏览器中使用。Webpack 的主要功能包括模块打包、代码转换、文件优化等，它可以帮助开发者更高效地开发和维护应用程序。")]),s._v(" "),a("h2",{attrs:{id:"基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[s._v("#")]),s._v(" 基础")]),s._v(" "),a("p",[s._v("本节将介绍 Webpack 的基础知识，包括安装和配置、入口和出口、Loader 和 Plugin 等。")]),s._v(" "),a("h3",{attrs:{id:"安装和配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装和配置"}},[s._v("#")]),s._v(" 安装和配置")]),s._v(" "),a("p",[s._v("安装 Webpack 可以使用 npm 命令进行安装，具体命令如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("npm install webpack webpack-cli --save-dev\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("安装完成后，需要进行配置。Webpack 的配置文件是一个 JavaScript 文件，通常命名为 webpack.config.js。配置文件中需要指定入口、出口、Loader 和 Plugin 等信息。")]),s._v(" "),a("h3",{attrs:{id:"模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模式"}},[s._v("#")]),s._v(" 模式")]),s._v(" "),a("p",[s._v("webpack分为2种模式 - development、production，分别代表着开发环境和生产环境。通常，我们使用环境变量来判断开发环境。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// 设置脚本变量\n"build": "cross-env NODE_ENV=production vue-cli-service build"\n// env文件\n.env\nNODE_ENV=production\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"入口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#入口"}},[s._v("#")]),s._v(" 入口")]),s._v(" "),a("p",[s._v("Webpack 的入口是指应用程序的入口文件，可分为单入口、多入口2种类别，通常入口文件是 JavaScript 代码。入口文件中可以引入其他模块，Webpack 会根据入口文件和引入的模块构建依赖关系图，以便于进行打包。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 单入口\nmodule.exports = {\n  entry: './src/main.js',\n  output: {\n    path: path.resolve(__dirname, 'dist'),\n    filename: 'bundle.js'\n  }\n};\n// 多入口\nmodule.exports = {\n  entry: {\n    app: './src/app.js',\n    vendor: './src/vendor.js'\n  },\n  output: {\n    path: path.resolve(__dirname, 'dist'),\n    filename: '[name].js'\n  }\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("h3",{attrs:{id:"出口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出口"}},[s._v("#")]),s._v(" 出口")]),s._v(" "),a("p",[s._v("出口是指打包后的文件输出路径和文件名。可以通过配置文件中的 output 属性来指定出口信息。例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("module.exports = {\n  entry: './src/index.js',\n  output: {\n    path: path.resolve(__dirname, 'dist'),\n    filename: 'bundle.js'\n  }\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"loader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loader"}},[s._v("#")]),s._v(" Loader")]),s._v(" "),a("p",[s._v("Loader 是用于对模块进行转换的工具，它可以将不同类型的文件转换为 JavaScript 模块。\n因为webpack本身只能处理js文件，对于IMG、CSS等类型文件，只能借助于Loader进行处理。\n例如，可以使用 babel-loader 将 ES6 代码转换为 ES5 代码，或者使用 css-loader 和 style-loader 将 CSS 文件转换为 JavaScript 模块。\nLoader 的使用需要在配置文件中进行配置，例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("module.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: [\n          {\n            loader: 'thread-loader',\n            options: {\n              workerParallelJobs: 50,\n              workers: require('os').cpus().length - 1,\n              poolTimeout: 2000,\n            }\n          },\n        'babel-loader'\n      ]\n      },\n      {\n        test: /\\.css$/,\n        use: [\n          'style-loader',\n          'css-loader'\n        ]\n      }\n    ]\n  }\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br")])]),a("h3",{attrs:{id:"plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plugin"}},[s._v("#")]),s._v(" Plugin")]),s._v(" "),a("p",[s._v("Plugin 是用于扩展 Webpack 功能的工具，它可以在打包过程中（在不同的时间节点）执行一些额外的任务，例如压缩代码、生成 HTML 文件等。\nPlugin 的使用需要在配置文件中进行配置，例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const HtmlWebpackPlugin = require('html-webpack-plugin');\nmodule.exports = {\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: './src/index.html'\n    })\n  ]\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("plugin的常见钩子函数如下：")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("entryOption")]),s._v("：在 Webpack 处理入口配置之前调用，可以修改入口配置。")]),s._v(" "),a("li",[a("code",[s._v("afterPlugins")]),s._v("：在 Webpack 加载所有插件之后调用，可以访问所有插件实例。")]),s._v(" "),a("li",[a("code",[s._v("afterResolvers")]),s._v("：在 Webpack 加载所有解析器之后调用，可以访问所有解析器实例。")]),s._v(" "),a("li",[a("code",[s._v("environment")]),s._v("：在 Webpack 设置环境变量之前调用，可以修改环境变量。")]),s._v(" "),a("li",[a("code",[s._v("beforeRun")]),s._v("：在 Webpack 开始编译之前调用，可以执行一些准备工作。")]),s._v(" "),a("li",[a("code",[s._v("run")]),s._v("：在 Webpack 开始编译时调用，可以执行一些初始化工作。")]),s._v(" "),a("li",[a("code",[s._v("watchRun")]),s._v("：在 Webpack 开始增量编译时调用，可以执行一些增量编译前的准备工作。")]),s._v(" "),a("li",[a("code",[s._v("normalModuleFactory")]),s._v("：在 Webpack 创建模块工厂之前调用，可以修改模块工厂。")]),s._v(" "),a("li",[a("code",[s._v("contextModuleFactory")]),s._v("：在 Webpack 创建上下文模块工厂之前调用，可以修改上下文模块工厂。")]),s._v(" "),a("li",[a("code",[s._v("beforeCompile")]),s._v("：在 Webpack 开始编译之前调用，可以执行一些准备工作。")]),s._v(" "),a("li",[a("code",[s._v("compile")]),s._v("：在 Webpack 开始编译时调用，可以执行一些初始化工作。")]),s._v(" "),a("li",[a("code",[s._v("thisCompilation")]),s._v("：在 Webpack 创建新的编译实例时调用，可以访问编译实例。")]),s._v(" "),a("li",[a("code",[s._v("compilation")]),s._v("：在 Webpack 创建新的编译实例时调用，可以访问编译实例。")]),s._v(" "),a("li",[a("code",[s._v("make")]),s._v("：在 Webpack 开始构建模块之前调用，可以执行一些准备工作。")]),s._v(" "),a("li",[a("code",[s._v("afterCompile")]),s._v("：在 Webpack 完成编译之后调用，可以执行一些后续工作。")]),s._v(" "),a("li",[a("code",[s._v("emit")]),s._v("：在 Webpack 输出资源到输出目录之前调用，可以修改输出资源。")]),s._v(" "),a("li",[a("code",[s._v("done")]),s._v("：在 Webpack 完成编译和输出之后调用，可以执行一些清理工作。")])]),s._v(" "),a("h2",{attrs:{id:"进阶"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进阶"}},[s._v("#")]),s._v(" 进阶")]),s._v(" "),a("h3",{attrs:{id:"devserver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#devserver"}},[s._v("#")]),s._v(" devServer")]),s._v(" "),a("p",[s._v("Webpack Dev Server 是一个开发服务器，可以快速地进行开发和调试。它提供了多种功能，例如自动刷新、热模块替换、代理等，可以大大提高开发效率和体验。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("module.exports = {\n  // ...\n  devServer: {\n    contentBase: './dist',\n    port: 8080,\n    hot: true,\n    watchContentBase: true,\n    watchOptions: {\n      poll: true\n    }\n    proxy: {\n      '/api': {\n        target: 'http://localhost:3000',\n        pathRewrite: { '^/api': '' }\n      }\n    }\n  }\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("h3",{attrs:{id:"hmr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hmr"}},[s._v("#")]),s._v(" HMR")]),s._v(" "),a("blockquote",[a("p",[s._v("参考文献：https://zhuanlan.zhihu.com/p/30669007\nHot Module Replacement（以下简称 HMR）是 webpack 发展至今引入的最令人兴奋的特性之一 。当你对代码进行修改并保存后，webpack 将对代码重新打包，并将新的模块发送到浏览器端，浏览器通过新的模块替换老的模块，在不刷新浏览器的前提下就能够对应用进行更新。")])]),s._v(" "),a("h4",{attrs:{id:"工作原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[s._v("#")]),s._v(" 工作原理")]),s._v(" "),a("p",[s._v("初识 HMR 的时候觉得其很神奇，一直有一些疑问萦绕在脑海。")]),s._v(" "),a("ol",[a("li",[s._v("webpack 可以将不同的模块打包成 bundle 文件或者几个 chunk 文件，但是当我通过 webpack HMR 进行开发的过程中，我并没有在我的 dist 目录中找到 webpack 打包好的文件，它们去哪呢？")]),s._v(" "),a("li",[s._v("使用 HMR 的过程中，通过 Chrome 开发者工具我知道浏览器是通过 websocket 和 webpack-dev-server 进行通信的，但是 websocket 的 message 中并没有发现新模块代码。打包后的新模块又是通过什么方式发送到浏览器端的呢？为什么新的模块不通过 websocket 随消息一起发送到浏览器端呢？")]),s._v(" "),a("li",[s._v("浏览器拿到最新的模块代码，HMR 又是怎么将老的模块替换成新的模块，在替换的过程中怎样处理模块之间的依赖关系？")]),s._v(" "),a("li",[s._v("当模块的热替换过程中，如果替换模块失败，有什么回退机制吗？\n带着上面这些疑问，我们寻找 HMR 底层的奥秘。")]),s._v(" "),a("li",[s._v("项目在启动时，webpack会启动devServer和clientjs，二者之间以sockjs来进行通信，同时开启watch模式，监听文件是否发生改变。")]),s._v(" "),a("li",[s._v("当开发人员改动文件并保存时，webpack（sockjs通信）会主动推送message，clientjs获取信息后解析数据；")]),s._v(" "),a("li",[s._v("clientjs根据数据来处理，浏览器以xhr的方式来请求hot-update.json，里面主要包括hash值以及是否change的布尔值，进而浏览器以script（jsonp）的形式获取新文件；")]),s._v(" "),a("li",[s._v("HotModulePlugin 将会对新旧模块进行对比，决定是否更新模块，在决定更新模块后，检查模块之间的依赖关系，更新模块的同时更新模块间的依赖引用。")]),s._v(" "),a("li",[s._v("最后一步，当 HMR 失败后，回退到 live reload 操作，也就是进行浏览器刷新来获取最新打包代码。\n"),a("strong",[s._v("注")]),s._v("：")]),s._v(" "),a("li",[s._v("sockjs通信数据格式")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n  "type": "sync",\n  "data": {\n    "hash": "1234abcd",\n    "errors": [],\n    "warnings": [],\n    "modules": {\n      "./src/index.js": {\n        "id": "./src/index.js",\n        "hash": "5678efgh",\n        "code": "console.log(\'Hello, World!\');",\n        "map": null\n      }\n    }\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('req: d2c6d3949ff77eb35270.hot-update.json\nres: {"h":"019ecdc516fa71841db1","c":{"32":true}}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("![image-20230619160816359](/Users/hedong/Library/Application Support/typora-user-images/image-20230619160816359.png)\n![image-20230619154529002](/Users/hedong/Library/Application Support/typora-user-images/image-20230619154529002.png)")]),s._v(" "),a("h3",{attrs:{id:"优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[s._v("#")]),s._v(" 优化")]),s._v(" "),a("p",[s._v("Webpack是以js为基础的一个打包工具，js作为一门单进程语言在处理大型应用程序时，可能会遇到性能问题。本节将主要介绍 Webpack优化方面的知识，主要包括构建速度以及打包体积。")]),s._v(" "),a("h4",{attrs:{id:"打包体积"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打包体积"}},[s._v("#")]),s._v(" 打包体积")]),s._v(" "),a("p",[s._v("Webpack 的打包体积受多个因素影响，包括代码分离、压缩等。下面介绍一些优化打包体积的方法。")]),s._v(" "),a("ol",[a("li",[s._v("Tree Shaking\nTree Shaking 是指通过静态分析代码，删除未使用的代码，从而减小打包体积。可以通过配置 optimization 属性中的 usedExports 和 sideEffects 属性来启用 Tree Shaking。")]),s._v(" "),a("li",[s._v("Scope Hoisting\nScope Hoisting 是指将模块中的代码合并到一个函数中，从而减小打包体积。可以通过配置 optimization 属性中的 concatenateModules 属性来启用 Scope Hoisting。")]),s._v(" "),a("li",[s._v("代码分离\n代码分离是指将应用程序中的代码分成多个块，以便于更快地加载和执行。可以通过入口起点、SplitChunksPlugin 插件和动态导入等方式来进行代码分离。")]),s._v(" "),a("li",[s._v("压缩代码\n压缩代码可以减小打包体积。Webpack 提供了多种方式来进行代码压缩，包括 UglifyJSPlugin、TerserPlugin、gzip压缩等。")])]),s._v(" "),a("blockquote",[a("p",[s._v("UglifyJS： Webpack 中用于压缩和混淆"),a("strong",[s._v("JavaScript")]),s._v("代码的工具，可以将 JavaScript 代码压缩成更小的体积，以便减少文件的传输时间和提高页面性能。UglifyJS 可以删除代码中的空格、注释、未使用的变量和函数、重复的代码等，从而减少文件的体积。UglifyJS 还可以将变量名和函数名替换为更短的名称，以减少文件的体积和提高代码的混淆程度。")]),s._v(" "),a("p",[s._v("TerserPlugin： Webpack 中用于压缩和混淆 JavaScript 代码的插件，是 UglifyJS 的替代品，可以将 JavaScript 代码压缩成更小的体积，以便减少文件的传输时间和提高页面性能。")]),s._v(" "),a("p",[s._v("Gzip：一种"),a("strong",[s._v("文件压缩")]),s._v("技术，可以将文件压缩成更小的体积，以便减少文件的传输时间和提高页面性能。Gzip 可以将文本文件（例如 HTML、CSS、JavaScript 等）压缩成更小的体积，从而减少文件的传输时间和提高页面的加载速度和性能。")])]),s._v(" "),a("h4",{attrs:{id:"构建速度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建速度"}},[s._v("#")]),s._v(" 构建速度")]),s._v(" "),a("p",[s._v("Webpack 的构建速度受多个因素影响，包括文件数量、依赖关系、插件等。下面介绍一些优化构建速度的方法。")]),s._v(" "),a("ol",[a("li",[s._v("缓存\nWebpack 提供了多种方式来进行缓存，包括输出文件名、Hash、ChunkHash 和 contentHash 等。使用缓存可以避免重复构建已经构建过的文件，从而提高构建速度。")]),s._v(" "),a("li",[s._v("多进程\nWebpack 4 中引入了多进程构建和多线程构建的功能，可以通过配置 parallel 属性来启用。使用多进程或多线程构建可以利用多核 CPU 的优势，提高构建速度。")]),s._v(" "),a("li",[s._v("减少文件数量\n减少文件数量可以减少构建时间。可以通过合并文件、删除无用文件等方式来减少文件数量。")]),s._v(" "),a("li",[s._v("使用 DllPlugin\nDllPlugin 是用于分离第三方库的插件，可以将第三方库打包成单独的文件，从而减少构建时间。使用 DllPlugin 需要先将第三方库打包成单独的文件，然后在主配置文件中引入。")])]),s._v(" "),a("h3",{attrs:{id:"手写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手写"}},[s._v("#")]),s._v(" 手写")]),s._v(" "),a("ol",[a("li",[s._v("手写webpack plugin")])]),s._v(" "),a("blockquote",[a("p",[s._v("emit：在 Webpack 输出资源到输出目录之前调用，可以修改输出资源。\n功能：向index.html中功能位置自动插入script、link、dns-prefetch等功能；")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const orderMap = {\n  dns: 'titleBefore',\n  titleBefore: 'titleBefore',\n  css: 'titleAfter',\n  link: 'titleAfter',\n  titleAfter: 'titleAfter',\n  idBefore: 'idBefore',\n  js: 'bodyLast',\n  javascript: 'bodyLast'\n}\nclass InsertLinkPlugin {\n  constructor(options) {\n    this.options = options ? (Array.isArray(options) ? options : [options]) : [];\n  }\n  apply(compiler) {\n    compiler.hooks.emit.tapAsync(\"InsertLinkPlugin\", (compilation, callback) => {\n      let htmlSource = compilation.assets[\"index.html\"].source();\n      this.options.forEach(option => {\n        const placeLocation = orderMap[option.type] || 'bodyLast';\n        console.log('placeLocation', placeLocation);\n        if (placeLocation === 'titleBefore') {\n          const linkTag = `<link href=\"${option.url}\" rel=\"${option.rel}\" />`;\n          htmlSource = htmlSource.replace(\"<title>\", `${linkTag}<title>`);\n        } else if (placeLocation === 'titleAfter') {\n          const linkTag = `<link href=\"${option.url}\" rel=\"${option.rel}\" />`;\n          htmlSource = htmlSource.replace(\"</title>\", `</title>${linkTag}`);\n        } else if (placeLocation === 'bodyLast') {\n          if (option.defer) {\n            const linkTag = `<script type='text/javascript' src=\"${option.url}\" defer ><\/script>`;\n            htmlSource = htmlSource.replace(\"</body>\", `${linkTag}</body>`);\n          } else if (option.async) {\n            const linkTag = `<script type='text/javascript' src=\"${option.url}\" async ><\/script>`;\n            htmlSource = htmlSource.replace(\"</body>\", `${linkTag}</body>`);\n          } else {\n            const linkTag = `<script type='text/javascript' src=\"${option.url}\" ><\/script>`;\n            htmlSource = htmlSource.replace(\"</body>\", `${linkTag}</body>`);\n          }\n        } else if (placeLocation === 'idBefore') {\n          const linkTag = `<script type='text/javascript' src=\"${option.url}\" ><\/script>`;\n          htmlSource = htmlSource.replace(\"<body>\", `<body>${linkTag}`);\n        }\n      });\n      // 将处理后的 index.html 重新赋给 compilation.assets 的 \"index.html\" 属性\n      compilation.assets[\"index.html\"] = {\n        source: () => htmlSource,\n        size: () => htmlSource.length,\n      };\n      callback(); // 调用回调函数，继续 webpack 编译流程\n    })\n  }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);