(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{398:function(e,v,_){"use strict";_.r(v);var o=_(7),c=Object(o.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"document对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#document对象"}},[e._v("#")]),e._v(" Document对象")]),e._v(" "),v("p",[v("code",[e._v("Document")]),e._v("接口表示任何在浏览器中载入的网页，并作为网页内容的入口，也就是"),v("code",[e._v("DOM")]),e._v("树。"),v("code",[e._v("DOM")]),e._v("树包含了像"),v("code",[e._v("<body>")]),e._v("、"),v("code",[e._v("<div>")]),e._v("这样的元素，以及大量其他元素。"),v("code",[e._v("Document")]),e._v("对象向网页文档本身提供了全局操作功能，接口描述了任何类型的文档的通用属性与方法，根据不同的文档类型(例如"),v("code",[e._v("HTML")]),e._v("、"),v("code",[e._v("XML")]),e._v("、"),v("code",[e._v("SVG")]),e._v("、"),v("code",[e._v("...")]),e._v(")能够使用更多"),v("code",[e._v("API")]),e._v("，此外使用"),v("code",[e._v("text/html")]),e._v("作为内容类型"),v("code",[e._v("content type")]),e._v("的"),v("code",[e._v("HTML")]),e._v("文档，还实现了"),v("code",[e._v("HTMLDocument")]),e._v("接口，而"),v("code",[e._v("XML")]),e._v("和"),v("code",[e._v("SVG")]),e._v("文档则额外实现了"),v("code",[e._v("XMLDocument")]),e._v("接口。")]),e._v(" "),v("h2",{attrs:{id:"属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[e._v("#")]),e._v(" 属性")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("Document()")]),e._v(": "),v("code",[e._v("Document")]),e._v("构造器创建一个新的"),v("code",[e._v("Document")]),e._v("对象，该对象是在浏览器中加载的页面，并作为页面内容的入口点。")]),e._v(" "),v("li",[v("code",[e._v("document.body")]),e._v(": 返回当前文档中的"),v("code",[e._v("<body>")]),e._v("元素或者"),v("code",[e._v("<frameset>")]),e._v("元素。")]),e._v(" "),v("li",[v("code",[e._v("document.characterSet")]),e._v(": "),v("code",[e._v("document.characterSet")]),e._v("只读属性，返回当前文档的字符编码，该字符编码是用于渲染此文档的字符集，可能与该页面指定的编码不同。")]),e._v(" "),v("li",[v("code",[e._v("document.childElementCount")]),e._v(": "),v("code",[e._v("ParentNode.childElementCount")]),e._v("只读属性，返回一个无符号长整型数字，表示给定元素的子元素数。")]),e._v(" "),v("li",[v("code",[e._v("document.children")]),e._v(": 只读属性，返回一个"),v("code",[e._v("Node")]),e._v("的子"),v("code",[e._v("elements")]),e._v("，是一个动态更新的"),v("code",[e._v("HTMLCollection")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("document.compatMode")]),e._v(": 表明当前文档的渲染模式是怪异模式/混杂模式还是标准模式。")]),e._v(" "),v("li",[v("code",[e._v("document.contentType")]),e._v(": 只读属性，返回当前文档的"),v("code",[e._v("Content-Type(MIME)")]),e._v("类型。")]),e._v(" "),v("li",[v("code",[e._v("document.currentScript")]),e._v(": "),v("code",[e._v("document.currentScript")]),e._v("属性返回当前正在运行的脚本所属的"),v("code",[e._v("<script>")]),e._v("元素，调用此属性的脚本不能是"),v("code",[e._v("JavaScript")]),e._v("模块，模块应当使用"),v("code",[e._v("import.meta")]),e._v("对象。")]),e._v(" "),v("li",[v("code",[e._v("document.defaultView")]),e._v(": 在浏览器中，该属性返回当前"),v("code",[e._v("document")]),e._v("对象所关联的"),v("code",[e._v("window")]),e._v("对象，如果没有则会返回"),v("code",[e._v("null")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("document.designMode")]),e._v(": "),v("code",[e._v("document.designMode")]),e._v("控制整个文档是否可编辑，有效值为"),v("code",[e._v("on")]),e._v("和"),v("code",[e._v("off")]),e._v("，根据规范，该属性默认为"),v("code",[e._v("off")]),e._v("，通常用在"),v("code",[e._v("<iframe>")]),e._v("中。")]),e._v(" "),v("li",[v("code",[e._v("document.dir")]),e._v(": "),v("code",[e._v("document.dir")]),e._v("的本质是"),v("code",[e._v("DOMString")]),e._v("，代表了文档的文字朝向，是从左到右"),v("code",[e._v("ltr")]),e._v("(默认)还是从右到左"),v("code",[e._v("rtl")]),e._v("，并可以设置文字的朝向。")]),e._v(" "),v("li",[v("code",[e._v("document.doctype")]),e._v(": 返回当前文档关联的文档类型定义"),v("code",[e._v("DTD")]),e._v("，返回的对象实现了"),v("code",[e._v("DocumentType")]),e._v("接口，使用"),v("code",[e._v("DOMImplementation.createDocumentType()")]),e._v("方法可以创建一个"),v("code",[e._v("DocumentType")]),e._v("类型的对象。")]),e._v(" "),v("li",[v("code",[e._v("document.documentElement")]),e._v(": "),v("code",[e._v("document.documentElement")]),e._v("是一个会返回文档对象"),v("code",[e._v("document")]),e._v("的根元素的只读属性，例如"),v("code",[e._v("HTML")]),e._v("文档的"),v("code",[e._v("<html>")]),e._v("元素。")]),e._v(" "),v("li",[v("code",[e._v("document.documentURI")]),e._v(": "),v("code",[e._v("Document")]),e._v("接口的属性"),v("code",[e._v("documentURI")]),e._v("以字符串的形式返回文档的位置"),v("code",[e._v("location")]),e._v("，在最初的"),v("code",[e._v("DOM3")]),e._v("定义中，这个属性是可读/写的，在现代的"),v("code",[e._v("DOM")]),e._v("标准"),v("code",[e._v("DOM4")]),e._v("中，它是只读的。")]),e._v(" "),v("li",[v("code",[e._v("document.domain")]),e._v(": "),v("code",[e._v("Document")]),e._v("接口的"),v("code",[e._v("domain")]),e._v("属性获取/设置当前文档的原始域部分，常用于同源策略，如果成功设置此属性，则原始端口的端口部分也将设置为"),v("code",[e._v("null")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("document.embeds")]),e._v(": "),v("code",[e._v("Document")]),e._v("接口的"),v("code",[e._v("embeds")]),e._v("只读属性返回当前文档中嵌入的"),v("code",[e._v("<object>")]),e._v("元素的列表。")]),e._v(" "),v("li",[v("code",[e._v("document.firstElementChild")]),e._v(": 只读属性，返回对象的第一个子元素,如果没有子元素，则为"),v("code",[e._v("null")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("document.forms")]),e._v(": "),v("code",[e._v("document.forms")]),e._v("返回当前文档中的"),v("code",[e._v("<form>")]),e._v("元素的一个集合，是一个"),v("code",[e._v("HTMLCollection")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("document.mozFullScreenEnabled")]),e._v(": 返回一个布尔值，表明浏览器是否支持全屏模式，全屏模式只在那些不包含窗口化的插件的页面中可用，对于一个"),v("code",[e._v("<iframe>")]),e._v("元素中的页面，则它必需拥有"),v("code",[e._v("mozallowfullscreen")]),e._v("属性。")]),e._v(" "),v("li",[v("code",[e._v("document.head")]),e._v(": 返回当前文档中的"),v("code",[e._v("<head>")]),e._v("元素，如果有多个"),v("code",[e._v("<head>")]),e._v("元素，则返回第一个。")]),e._v(" "),v("li",[v("code",[e._v("document.hidden")]),e._v(": "),v("code",[e._v("document.hidden")]),e._v("只读属性，返回布尔值，表示页面是"),v("code",[e._v("true")]),e._v("否"),v("code",[e._v("false")]),e._v("隐藏。")]),e._v(" "),v("li",[v("code",[e._v("document.images")]),e._v(": 只读属性，返回当前文档中所有"),v("code",[e._v("image")]),e._v("元素的集合。")]),e._v(" "),v("li",[v("code",[e._v("document.implementation")]),e._v(": 返回一个和当前文档相关联的"),v("code",[e._v("DOMImplementation")]),e._v("对象。")]),e._v(" "),v("li",[v("code",[e._v("lastElementChild")]),e._v(": 只读属性，返回对象的最后一个孩子"),v("code",[e._v("Element")]),e._v("，如果没有子元素，则返回"),v("code",[e._v("null")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("document.lastModified")]),e._v(": 返回一个字符串，其中包含了当前文档的最后修改日期和时间。")]),e._v(" "),v("li",[v("code",[e._v("document.links")]),e._v(": "),v("code",[e._v("document.links")]),e._v("属性返回一个文档中所有具有"),v("code",[e._v("href")]),e._v("属性值的"),v("code",[e._v("<area>")]),e._v("元素与"),v("code",[e._v("<a>")]),e._v("元素的集合。")]),e._v(" "),v("li",[v("code",[e._v("document.location")]),e._v(": 返回一个"),v("code",[e._v("Location")]),e._v("对象，包含有文档的"),v("code",[e._v("URL")]),e._v("相关的信息，并提供了改变该"),v("code",[e._v("URL")]),e._v("和加载其他"),v("code",[e._v("URL")]),e._v("的方法。")]),e._v(" "),v("li",[v("code",[e._v("document.onbeforeunload")]),e._v(": 该事件在即将离开页面（刷新或关闭）时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onload")]),e._v(": 文档加载完成后触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onreadystatechange")]),e._v(": 当文档的"),v("code",[e._v("readyState")]),e._v("属性发生改变时，会触发"),v("code",[e._v("readystatechange")]),e._v("事件。")]),e._v(" "),v("li",[v("code",[e._v("document.onvisibilitychange")]),e._v(": 将在该对象的"),v("code",[e._v("visibilitychange")]),e._v("事件被触发时调用。")]),e._v(" "),v("li",[v("code",[e._v("document.onunload")]),e._v(": 当窗口卸载其内容和资源时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onerror")]),e._v(": 当发生"),v("code",[e._v("JavaScript")]),e._v("运行时错误与资源加载失败时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onabort")]),e._v(": 发送到"),v("code",[e._v("window")]),e._v("的中止"),v("code",[e._v("abort")]),e._v("事件的事件处理程序，不适用于"),v("code",[e._v("Firefox 2")]),e._v("或"),v("code",[e._v("Safari")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("document.onblur")]),e._v(": 窗口失去焦点时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onfocus")]),e._v(": 窗口获得焦点时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onresize")]),e._v(": 窗口大小发生改变时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onscroll")]),e._v(": 窗口发生滚动时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onmessage")]),e._v(": 窗口对象接收消息事件时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onchange")]),e._v(": 窗口内表单元素的内容改变时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.oninput")]),e._v(": 窗口内表单元素获取用户输入时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onreset")]),e._v(": 窗口内表单重置时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onselect")]),e._v(": 窗口内表单元素中文本被选中时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onsubmit")]),e._v(": 窗口内表单中"),v("code",[e._v("submit")]),e._v("按钮被按下触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onhashchange")]),e._v(": 当窗口的锚点哈希值发生变化时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onclick")]),e._v(": 当点击页面时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onmouseup")]),e._v(": 鼠标按键被松开时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.ondblclick")]),e._v(": 当双击页面时调用事件句柄。")]),e._v(" "),v("li",[v("code",[e._v("document.oncontextmenu")]),e._v(": 在点击鼠标右键打开上下文菜单时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onmousedown")]),e._v(": 鼠标按钮被按下时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onmousemove")]),e._v(": 当移动鼠标时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onmouseout")]),e._v(": 鼠标移出窗口时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onmouseover")]),e._v(": 鼠标移动到窗口时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onauxclick")]),e._v(": 指示在输入设备上按下非主按钮时触发，例如鼠标中键。")]),e._v(" "),v("li",[v("code",[e._v("document.onkeydown")]),e._v(": 某个键盘按键被按下时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onkeyup")]),e._v(": 某个键盘按键被松开后触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onkeypress")]),e._v(": 某个键盘按键被按下并松开后触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onanimationcancel")]),e._v(": 当"),v("code",[e._v("CSS")]),e._v("动画意外中止时，即在任何时候它停止运行而不发送"),v("code",[e._v("animationend")]),e._v("事件时将发送此事件，例如当"),v("code",[e._v("animation-name")]),e._v("被改变，动画被删除等")]),e._v(" "),v("li",[v("code",[e._v("document.onanimationend")]),e._v(": 当"),v("code",[e._v("CSS")]),e._v("动画到达其活动周期的末尾时，按照"),v("code",[e._v("(animation-duration*animation-iteration-count) + animation-delay")]),e._v("进行计算，将发送此事件。")]),e._v(" "),v("li",[v("code",[e._v("document.onanimationiteration")]),e._v(": 此事件将会在"),v("code",[e._v("CSS")]),e._v("动画到达每次迭代结束时触发，当通过执行最后一个动画步骤完成对动画指令序列的单次传递完成时，迭代结束。")]),e._v(" "),v("li",[v("code",[e._v("document.ondevicemotion")]),e._v(": 设备状态发生改变时触发")]),e._v(" "),v("li",[v("code",[e._v("document.ondeviceorientation")]),e._v(": 设备相对方向发生改变时触发")]),e._v(" "),v("li",[v("code",[e._v("document.ondeviceproximity")]),e._v(": 当设备传感器检测到物体变得更接近或更远离设备时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onbeforeprint")]),e._v(":  该事件在页面即将开始打印时触发")]),e._v(" "),v("li",[v("code",[e._v("document.onafterprint")]),e._v(": 该事件在页面已经开始打印或者打印窗口已经关闭时触发。")]),e._v(" "),v("li",[v("code",[e._v("document.onappinstalled")]),e._v(": 一旦将"),v("code",[e._v("Web")]),e._v("应用程序成功安装为渐进式"),v("code",[e._v("Web")]),e._v("应用程序，该事件就会被分派。")]),e._v(" "),v("li",[v("code",[e._v("document.onbeforeinstallprompt")]),e._v(": 当用户即将被提示安装"),v("code",[e._v("web")]),e._v("应用程序时，该处理程序将在设备上调度，其相关联的事件可以保存以供稍后用于在更适合的时间提示用户。")]),e._v(" "),v("li",[v("code",[e._v("document.plugins")]),e._v(": 只读属性返回一个"),v("code",[e._v("HTMLCollection")]),e._v("对象，该对象包含一个或多个"),v("code",[e._v("HTMLEmbedElements")]),e._v("，表示当前文档中的"),v("code",[e._v("<embed>")]),e._v("元素。")]),e._v(" "),v("li",[v("code",[e._v("document.readyState")]),e._v(": "),v("code",[e._v("document.readyState")]),e._v("属性描述"),v("code",[e._v("document")]),e._v("的加载状态。当该属性值发生变化时，会在"),v("code",[e._v("document")]),e._v("对象上触发"),v("code",[e._v("readystatechange")]),e._v("事件。")]),e._v(" "),v("li",[v("code",[e._v("document.referrer")]),e._v(": 返回一个"),v("code",[e._v("URI")]),e._v(",当前页面就是从这个"),v("code",[e._v("URI")]),e._v("所代表的页面跳转或打开的。")]),e._v(" "),v("li",[v("code",[e._v("document.scripts")]),e._v(": 返回一个"),v("code",[e._v("HTMLCollection")]),e._v("对象，包含了当前文档中所有"),v("code",[e._v("<script>")]),e._v("元素的集合。")]),e._v(" "),v("li",[v("code",[e._v("document.scrollingElement")]),e._v(": 只读属性，返回滚动文档的"),v("code",[e._v("Element")]),e._v("对象的引用，在标准模式下，返回文档的根元素，当在怪异模式下， 返回"),v("code",[e._v("HTML body")]),e._v("元素，若不存在返回"),v("code",[e._v("null")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("document.selectedStyleSheetSet")]),e._v(": 返回当前使用的样式表集合的名称，你也可以使用这个属性设置当前样式表集。")]),e._v(" "),v("li",[v("code",[e._v("document.styleSheetSets")]),e._v(": 返回一个所有当前可用样式表集的实时列表。")]),e._v(" "),v("li",[v("code",[e._v("document.title")]),e._v(": 获取或设置文档的标题。")]),e._v(" "),v("li",[v("code",[e._v("document.URL")]),e._v(": 返回当前文档的"),v("code",[e._v("URL")]),e._v("地址。")]),e._v(" "),v("li",[v("code",[e._v("document.visibilityState")]),e._v(": 只读属性，返回"),v("code",[e._v("document")]),e._v("的可见性，即当前可见元素的上下文环境，由此可以知道当前文档(即为页面)是在背后, 或是不可见的隐藏的标签页，或者正在预渲染，可选值有"),v("code",[e._v("visible")]),e._v("可见(至少是部分可见)、"),v("code",[e._v("hidden")]),e._v("不可见、"),v("code",[e._v("prerender")]),e._v("预渲染。")])]),e._v(" "),v("h2",{attrs:{id:"方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[e._v("#")]),e._v(" 方法")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("document.adoptNode(externalNode)")]),e._v(": 从其他的"),v("code",[e._v("document")]),e._v("文档中获取一个节点，该节点以及它的子树上的所有节点都会从原文档删除(如果有这个节点的话)，并且它的"),v("code",[e._v("ownerDocument")]),e._v("属性会变成当前的"),v("code",[e._v("document")]),e._v("文档，之后你可以把这个节点插入到当前文档中。")]),e._v(" "),v("li",[v("code",[e._v("document.close()")]),e._v(": "),v("code",[e._v("document.close()")]),e._v("用于结束由对文档的"),v("code",[e._v("document.write()")]),e._v("写入操作，这种写入操作一般由"),v("code",[e._v("document.open()")]),e._v("打开。")]),e._v(" "),v("li",[v("code",[e._v("document.createAttribute(name)")]),e._v(": "),v("code",[e._v("document.createAttribute()")]),e._v("方法创建并返回一个新的属性节点，这个对象创建一个实现了"),v("code",[e._v("Attr")]),e._v("接口的节点，这个方式下"),v("code",[e._v("DOM")]),e._v("不限制节点能够添加的属性种类。")]),e._v(" "),v("li",[v("code",[e._v("document.createCDATASection(data)")]),e._v(": 创建并返回一个新的"),v("code",[e._v("CDATA")]),e._v("片段节点。")]),e._v(" "),v("li",[v("code",[e._v("document.createComment(data)")]),e._v(": 创建并返回一个注释节点，"),v("code",[e._v("data")]),e._v("是一个字符串，包含了注释的内容。")]),e._v(" "),v("li",[v("code",[e._v("document.createDocumentFragment()")]),e._v(": 创建一个新的空白的文档片段"),v("code",[e._v("DocumentFragment")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("document.createElement(tagName[, options])")]),e._v(": 在"),v("code",[e._v("HTML")]),e._v("文档中，"),v("code",[e._v("document.createElement()")]),e._v("方法用于创建一个由标签名称"),v("code",[e._v("tagName")]),e._v("指定的"),v("code",[e._v("HTML")]),e._v("元素。如果用户代理无法识别"),v("code",[e._v("tagName")]),e._v("，则会生成一个未知"),v("code",[e._v("HTML")]),e._v("元素"),v("code",[e._v("HTMLUnknownElement")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("document.createElementNS(namespaceURI, qualifiedName[, options])")]),e._v(": 创建一个具有指定的命名空间"),v("code",[e._v("URI")]),e._v("和限定名称的元素，要创建一个元素而不指定命名空间"),v("code",[e._v("URI")]),e._v("，请使用"),v("code",[e._v("createElement")]),e._v("方法。")]),e._v(" "),v("li",[v("code",[e._v("document.createEvent(type)")]),e._v(": 创建一个指定类型的事件，其返回的对象必须先初始化并可以被传递给"),v("code",[e._v("element.dispatchEvent")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("document.createExpression(xpathText, namespaceURLMapper)")]),e._v(": 该方法将编译生成一个 "),v("code",[e._v("XPathExpression")]),e._v("，可以用来多次的执行。")]),e._v(" "),v("li",[v("code",[e._v("document.createNodeIterator(root[, whatToShow[, filter]])")]),e._v(": 返回一个新的"),v("code",[e._v("NodeIterator")]),e._v("对象。")]),e._v(" "),v("li",[v("code",[e._v("document.createNSResolver(node)")]),e._v(": 创建一个"),v("code",[e._v("XPathNSResolver")]),e._v("，它根据指定节点范围内的定义解析名称空间。")]),e._v(" "),v("li",[v("code",[e._v("document.createProcessingInstruction(target, data)")]),e._v(": 创建一个新的处理指令节点，并返回。")]),e._v(" "),v("li",[v("code",[e._v("document.createRange()")]),e._v(": 返回一个"),v("code",[e._v("Range")]),e._v("对象。")]),e._v(" "),v("li",[v("code",[e._v("document.createTextNode(data)")]),e._v(": 创建一个新的文本节点，这个方法可以用来转义"),v("code",[e._v("HTML")]),e._v("字符。")]),e._v(" "),v("li",[v("code",[e._v("document.createTreeWalker(root, whatToShow, filter, entityReferenceExpansion)")]),e._v(": 创建并返回一个"),v("code",[e._v("TreeWalker")]),e._v("对象。")]),e._v(" "),v("li",[v("code",[e._v("document.evaluate(xpathExpression, contextNode, namespaceResolver, resultType, result)")]),e._v(": 根据传入的"),v("code",[e._v("XPath")]),e._v("表达式以及其他参数，返回一个"),v("code",[e._v("XPathResult")]),e._v("对象。")]),e._v(" "),v("li",[v("code",[e._v("document.exitFullscreen()")]),e._v(": 用于让当前文档退出全屏模式，调用这个方法会让文档回退到上一个调用"),v("code",[e._v("Element.requestFullscreen()")]),e._v("方法进入全屏模式之前的状态。")]),e._v(" "),v("li",[v("code",[e._v("document.getElementById(id)")]),e._v(": 返回一个匹配特定"),v("code",[e._v("ID")]),e._v("的元素，由于元素的"),v("code",[e._v("ID")]),e._v("在大部分情况下要求是独一无二的，这个方法自然而然地成为了一个高效查找特定元素的方法。")]),e._v(" "),v("li",[v("code",[e._v("document.getElementsByClassName(names)")]),e._v(": 返回一个包含了所有指定类名的子元素的类数组对象，当在"),v("code",[e._v("document")]),e._v("对象上调用时，会搜索整个"),v("code",[e._v("DOM")]),e._v("文档，包含根节点。你也可以在任意元素上调用"),v("code",[e._v("getElementsByClassName()")]),e._v("方法，它将返回的是以当前元素为根节点，所有指定类名的子元素。")]),e._v(" "),v("li",[v("code",[e._v("document.getElementsByName(name)")]),e._v(": 根据给定的"),v("code",[e._v("name")]),e._v("返回一个在"),v("code",[e._v("(X)HTML document")]),e._v("的节点列表集合。")]),e._v(" "),v("li",[v("code",[e._v("document.getElementsByTagName(name)")]),e._v(": 返回一个包括所有给定标签名称的元素的"),v("code",[e._v("HTML")]),e._v("集合"),v("code",[e._v("HTMLCollection")]),e._v("，整个文件结构都会被搜索，包括根节点。返回的"),v("code",[e._v("HTML")]),e._v("集合是动态的，意味着它可以自动更新自己来保持和"),v("code",[e._v("DOM")]),e._v("树的同步而不用再次调用"),v("code",[e._v("document.getElementsByTagName()")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("document.getElementsByTagNameNS(namespace, name)")]),e._v(": 返回带有指定名称和命名空间的元素集合，整个文件结构都会被搜索，包括根节点。")]),e._v(" "),v("li",[v("code",[e._v("document.hasFocus()")]),e._v(": 返回一个"),v("code",[e._v("Boolean")]),e._v("，表明当前文档或者当前文档内的节点是否获得了焦点，该方法可以用来判断当前文档中的活动元素是否获得了焦点。")]),e._v(" "),v("li",[v("code",[e._v("document.hasStorageAccess()")]),e._v(": 返回了一个"),v("code",[e._v("Promise")]),e._v("来判断该文档是否有访问第一方储存的权限。")]),e._v(" "),v("li",[v("code",[e._v("document.importNode(externalNode, deep)")]),e._v(": 将外部文档的一个节点拷贝一份，然后可以把这个拷贝的节点插入到当前文档中。")]),e._v(" "),v("li",[v("code",[e._v("document.open()")]),e._v(": 打开一个要写入的文档，这将会有一些连带的影响，例如此时已注册到文档、文档中的节点或文档的window的所有事件监听器会被清除，文档中的所有节点会被清除。")]),e._v(" "),v("li",[v("code",[e._v("prepend((Node or DOMString)... nodes)")]),e._v(": 可以在父节点的第一个子节点之前插入一系列"),v("code",[e._v("Node")]),e._v("对象或者"),v("code",[e._v("DOMString")]),e._v("对象。")]),e._v(" "),v("li",[v("code",[e._v("document.queryCommandEnabled(command)")]),e._v(": 可查询浏览器中指定的编辑指令是否可用。")]),e._v(" "),v("li",[v("code",[e._v("document.queryCommandSupported(command)")]),e._v(": 确定浏览器是否支持指定的编辑指令。")]),e._v(" "),v("li",[v("code",[e._v("document.querySelector(selectors)")]),e._v(": 表示文档中与指定的一组"),v("code",[e._v("CSS")]),e._v("选择器匹配的第一个元素，是一个"),v("code",[e._v("HTMLElement")]),e._v("对象，如果没有匹配到，则返回"),v("code",[e._v("null")]),e._v("。匹配是使用深度优先先序遍历，从文档标记中的第一个元素开始，并按子节点的顺序依次遍历。")]),e._v(" "),v("li",[v("code",[e._v("document.querySelectorAll(selectors)")]),e._v(": 返回一个静态"),v("code",[e._v("NodeList")]),e._v("，包含一个与至少一个指定"),v("code",[e._v("CSS")]),e._v("选择器匹配的元素的"),v("code",[e._v("Element")]),e._v("对象，或者在没有匹配的情况下为空"),v("code",[e._v("NodeList")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("document.releaseCapture()")]),e._v(": 如果该"),v("code",[e._v("document")]),e._v("中的一个元素之上当前启用了鼠标捕获，则释放鼠标捕获，通过调用"),v("code",[e._v("element.setCapture()")]),e._v("实现在一个元素上启用鼠标捕获。")]),e._v(" "),v("li",[v("code",[e._v("document.write(markup)")]),e._v(": "),v("code",[e._v("document.write()")]),e._v("方法将一个文本字符串写入一个由"),v("code",[e._v("document.open()")]),e._v("打开的文档流，因为"),v("code",[e._v("document.write")]),e._v("需要向文档流中写入内容，所以若在一个已关闭(例如已完成加载)的文档上调用"),v("code",[e._v("document.write")]),e._v("，就会自动调用"),v("code",[e._v("document.open")]),e._v("，这将清空该文档的内容。")]),e._v(" "),v("li",[v("code",[e._v("document.writeln(line)")]),e._v(": 向文档中写入一串文本，并紧跟着一个换行符。")])]),e._v(" "),v("h2",{attrs:{id:"每日一题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#每日一题"}},[e._v("#")]),e._v(" 每日一题")]),e._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("https://github.com/WindrunnerMax/EveryDay\n")])]),e._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[e._v("1")]),v("br")])]),v("h2",{attrs:{id:"参考"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("https://developer.mozilla.org/zh-CN/docs/Web/API/Document\n")])]),e._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[e._v("1")]),v("br")])])])}),[],!1,null,null,null);v.default=c.exports}}]);