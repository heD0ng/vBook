(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{405:function(e,o,v){"use strict";v.r(o);var _=v(7),d=Object(_.a)({},(function(){var e=this,o=e._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"node对象"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#node对象"}},[e._v("#")]),e._v(" Node对象")]),e._v(" "),o("p",[o("code",[e._v("Node")]),e._v("是一个接口，各种类型的"),o("code",[e._v("DOM API")]),e._v("对象会从这个接口继承，其允许我们使用相似的方式对待这些不同类型的对象。")]),e._v(" "),o("h2",{attrs:{id:"属性"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[e._v("#")]),e._v(" 属性")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("Node.prototype.baseURI")]),e._v(": 只读，返回一个表示"),o("code",[e._v("base URL")]),e._v("的"),o("code",[e._v("DOMString")]),e._v("，不同语言中的"),o("code",[e._v("base URL")]),e._v("的概念都不一样，在"),o("code",[e._v("HTML")]),e._v("中"),o("code",[e._v("base URL")]),e._v("表示协议和域名，以及一直到最后一个"),o("code",[e._v("/")]),e._v("之前的文件目录。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.baseURIObject")]),e._v(": 只读的"),o("code",[e._v("nsIURI")]),e._v("对象表示元素的"),o("code",[e._v("base URI")]),e._v("(不适用于网页内容)。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.childNodes")]),e._v(": 只读，返回一个包含了该节点所有子节点的实时的"),o("code",[e._v("NodeList")]),e._v("，"),o("code",[e._v("NodeList")]),e._v("是动态变化的，如果该节点的子节点发生了变化，"),o("code",[e._v("NodeList")]),e._v("对象就会自动更新。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.firstChild")]),e._v(": 只读，返回该节点的第一个子节点"),o("code",[e._v("Node")]),e._v("，如果该节点没有子节点则返回"),o("code",[e._v("null")]),e._v("。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.isConnected")]),e._v(": 只读，返回一个布尔值用来检测该节点是否已连接(直接或者间接)到一个上下文对象上，比如通常"),o("code",[e._v("DOM")]),e._v("情况下的"),o("code",[e._v("Document")]),e._v("对象，或者在"),o("code",[e._v("shadow DOM")]),e._v("情况下的"),o("code",[e._v("ShadowRoot")]),e._v("对象。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.lastChild")]),e._v(": 只读，返回该节点的最后一个子节点"),o("code",[e._v("Node")]),e._v("，如果该节点没有子节点则返回"),o("code",[e._v("null")]),e._v("。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.nextSibling")]),e._v(": 只读，返回与该节点同级的下一个节点"),o("code",[e._v("Node")]),e._v("，如果没有返回"),o("code",[e._v("null")]),e._v("。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.nodeName")]),e._v(": 只读，返回一个包含该节点名字的"),o("code",[e._v("DOMString")]),e._v("，节点的名字的结构和节点类型不同，"),o("code",[e._v("HTMLElement")]),e._v("的名字跟它所关联的标签对应，就比如"),o("code",[e._v("HTMLAudioElement")]),e._v("的就是"),o("code",[e._v("audio")]),e._v("，"),o("code",[e._v("Text")]),e._v("节点对应的是"),o("code",[e._v("#text")]),e._v("，还有"),o("code",[e._v("Document")]),e._v("节点对应的是"),o("code",[e._v("#document")]),e._v("。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.nodeType")]),e._v(": 只读，返回一个与该节点类型对应的无符号短整型的值。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.nodeValue")]),e._v(": 返回或设置当前节点的值。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.ownerDocument")]),e._v(": 只读，返回这个元素属于的"),o("code",[e._v("Document")]),e._v("对象，如果没有"),o("code",[e._v("Document")]),e._v("对象与之关联，返回"),o("code",[e._v("null")]),e._v("。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.parentNode")]),e._v(": 只读，返回一个当前节点"),o("code",[e._v("Node")]),e._v("的父节点。如果没有这样的节点，比如说像这个节点是树结构的顶端或者没有插入一棵树中， 这个属性返回"),o("code",[e._v("null")]),e._v("。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.parentElement")]),e._v(": 只读，返回一个当前节点的父节点"),o("code",[e._v("Element")]),e._v("。如果当前节点没有父节点或者说父节点不是一个元素"),o("code",[e._v("Element")]),e._v(", 这个属性返回"),o("code",[e._v("null")]),e._v("。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.previousSibling")]),e._v(": 只读，返回一个当前节点同辈的前一个节点"),o("code",[e._v("Node")]),e._v("，如果不存在这样的一个节点的话返回"),o("code",[e._v("null")]),e._v("。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.textContent")]),e._v(": 返回或设置一个元素内所有子节点及其后代的文本内容。")])]),e._v(" "),o("h2",{attrs:{id:"方法"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[e._v("#")]),e._v(" 方法")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("Node.prototype.appendChild()")]),e._v(": 将指定的"),o("code",[e._v("childNode")]),e._v("参数作为最后一个子节点添加到当前节点，如果参数引用了"),o("code",[e._v("DOM")]),e._v("树上的现有节点，则节点将从当前位置分离，并附加到新位置。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.cloneNode()")]),e._v(": 克隆一个"),o("code",[e._v("Node")]),e._v("，并且可以选择是否克隆这个节点下的所有内容，默认情况下，节点下的内容会被克隆。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.compareDocumentPosition()")]),e._v(": 比较当前节点与文档中的另一节点的位置。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.contains()")]),e._v(": 返回一个"),o("code",[e._v("Boolean")]),e._v("布尔值，来表示传入的节点是否为该节点的后代节点。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.getRootNode()")]),e._v(": 返回上下文对象的根节点，如果"),o("code",[e._v("shadow root")]),e._v("节点存在的话，也可以在返回的节点中包含它。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.hasChildNodes()")]),e._v(": 返回一个"),o("code",[e._v("Boolean")]),e._v("布尔值，来表示该元素是否包含有子节点。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.insertBefore()")]),e._v(": 在当前节点下增加一个子节点"),o("code",[e._v("Node")]),e._v("，并使该子节点位于参考节点的前面。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.isDefaultNamespace()")]),e._v(": 返回一个"),o("code",[e._v("Boolean")]),e._v("类型值，接受一个命名空间"),o("code",[e._v("URI")]),e._v("作为参数，当参数所指代的命名空间是默认命名空间时返回"),o("code",[e._v("true")]),e._v("，否则返回"),o("code",[e._v("false")]),e._v("。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.isEqualNode()")]),e._v(": 返回一个"),o("code",[e._v("Boolean")]),e._v("类型值，当两个"),o("code",[e._v("node")]),e._v("节点为相同类型的节点且定义的数据点匹配时(即属性和属性值相同，节点值相同)返回"),o("code",[e._v("true")]),e._v("，否则返回"),o("code",[e._v("false")]),e._v("。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.isSameNode()")]),e._v(": 返回一个"),o("code",[e._v("Boolean")]),e._v("类型值，返回这两个节点的引用比较结果。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.lookupPrefix()")]),e._v(": 返回包含参数"),o("code",[e._v("URI")]),e._v("所对应的命名空间前缀的"),o("code",[e._v("DOMString")]),e._v("，若不存在则返回"),o("code",[e._v("null")]),e._v("，如果存在多个可匹配的前缀，则返回结果和浏览器具体实现有关。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.lookupNamespaceURI()")]),e._v(": 接受一个前缀，并返回前缀所对应节点命名空间"),o("code",[e._v("URI")]),e._v("，如果"),o("code",[e._v("URI")]),e._v("不存在则返回"),o("code",[e._v("null")]),e._v("，传入"),o("code",[e._v("null")]),e._v("作为"),o("code",[e._v("prefix")]),e._v("参数将返回默认命名空间。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.normalize()")]),e._v(": 对该元素下的所有文本子节点进行整理，合并相邻的文本节点并清除空文本节点。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.removeChild()")]),e._v(": 移除当前节点的一个子节点。这个子节点必须存在于当前节点中。")]),e._v(" "),o("li",[o("code",[e._v("Node.prototype.replaceChild()")]),e._v(": 对选定的节点，替换一个子节点"),o("code",[e._v("Node")]),e._v("为另外一个节点。")])]),e._v(" "),o("h2",{attrs:{id:"每日一题"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#每日一题"}},[e._v("#")]),e._v(" 每日一题")]),e._v(" "),o("div",{staticClass:"language- line-numbers-mode"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("https://github.com/WindrunnerMax/EveryDay\n")])]),e._v(" "),o("div",{staticClass:"line-numbers-wrapper"},[o("span",{staticClass:"line-number"},[e._v("1")]),o("br")])]),o("h2",{attrs:{id:"参考"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),o("div",{staticClass:"language- line-numbers-mode"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("https://developer.mozilla.org/zh-CN/docs/Web/API/Node\n")])]),e._v(" "),o("div",{staticClass:"line-numbers-wrapper"},[o("span",{staticClass:"line-number"},[e._v("1")]),o("br")])])])}),[],!1,null,null,null);o.default=d.exports}}]);