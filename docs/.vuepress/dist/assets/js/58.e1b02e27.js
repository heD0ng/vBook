(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{370:function(e,v,t){"use strict";t.r(v);var _=t(7),o=Object(_.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"event对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#event对象"}},[e._v("#")]),e._v(" Event对象")]),e._v(" "),v("p",[v("code",[e._v("Event")]),e._v("对象表示在"),v("code",[e._v("DOM")]),e._v("中出现的事件，在"),v("code",[e._v("DOM")]),e._v("中有许多不同类型的事件，其主要使用基于"),v("code",[e._v("Event")]),e._v("对象作为主接口的二次接口，"),v("code",[e._v("Event")]),e._v("对象本身包含适用于所有事件的属性和方法。")]),e._v(" "),v("h2",{attrs:{id:"描述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[e._v("#")]),e._v(" 描述")]),e._v(" "),v("p",[e._v("事件有很多类型，一些事件是由用户触发的，例如鼠标或键盘事件，而其他事件常由"),v("code",[e._v("API")]),e._v("生成，例如指示动画已经完成运行的事件，视频已被暂停等等，事件也可以通过脚本代码触发，例如对元素调用"),v("code",[e._v("HTMLElement.click()")]),e._v("方法，或者定义一些自定义事件，再使用"),v("code",[e._v("EventTarget.dispatchEvent()")]),e._v("方法将自定义事件派发往指定的目标"),v("code",[e._v("target")]),e._v("。"),v("br"),e._v("\n一个元素可以绑定多个事件处理函数，甚至是同一种类型的事件，尤其是这种分离的，并且相互独立的代码模块对同一个元素绑定事件处理函数，每一个模块代码都有着独立的目的。通过"),v("code",[e._v("EventTarget.addEventListener()")]),e._v("方法可以将事件处理函数绑定到不同的"),v("code",[e._v("HTML elements")]),e._v("上。这种绑定事件处理函数的方式基本替换了老版本中使用"),v("code",[e._v("HTML event handler attributes")]),e._v("即"),v("code",[e._v("DOM0")]),e._v("级事件来绑定事件处理函数的方式，除此之外通过使用"),v("code",[e._v("removeEventListener()")]),e._v("方法，这些事件处理函数也能被移除。"),v("br"),e._v("\n当有很多嵌套的元素，并且每一个元素都有着自己的事件处理函数，事件处理过程会变得非常复杂，尤其当一个父元素和子元素绑定有相同类型的事件处理函数的时候，因为结构上的重叠，事件处理函数可能会依次被触发，触发的顺序取决于事件冒泡和事件捕获在每一个元素上的设置情况。"),v("br"),e._v("\n下面是主要基于"),v("code",[e._v("Event")]),e._v("接口的接口列表，需要注意的是，所有的事件接口名称都是以"),v("code",[e._v("Event")]),e._v("结尾的。")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("AnimationEvent")])]),e._v(" "),v("li",[v("code",[e._v("AudioProcessingEvent")])]),e._v(" "),v("li",[v("code",[e._v("BeforeInputEvent")])]),e._v(" "),v("li",[v("code",[e._v("BeforeUnloadEvent")])]),e._v(" "),v("li",[v("code",[e._v("BlobEvent")])]),e._v(" "),v("li",[v("code",[e._v("ClipboardEvent")])]),e._v(" "),v("li",[v("code",[e._v("CloseEvent")])]),e._v(" "),v("li",[v("code",[e._v("CompositionEvent")])]),e._v(" "),v("li",[v("code",[e._v("CSSFontFaceLoadEvent")])]),e._v(" "),v("li",[v("code",[e._v("CustomEvent")])]),e._v(" "),v("li",[v("code",[e._v("DeviceLightEvent")])]),e._v(" "),v("li",[v("code",[e._v("DeviceMotionEvent")])]),e._v(" "),v("li",[v("code",[e._v("DeviceOrientationEvent")])]),e._v(" "),v("li",[v("code",[e._v("DeviceProximityEvent")])]),e._v(" "),v("li",[v("code",[e._v("DOMTransactionEvent")])]),e._v(" "),v("li",[v("code",[e._v("DragEvent")])]),e._v(" "),v("li",[v("code",[e._v("EditingBeforeInputEvent")])]),e._v(" "),v("li",[v("code",[e._v("ErrorEvent")])]),e._v(" "),v("li",[v("code",[e._v("FetchEvent")])]),e._v(" "),v("li",[v("code",[e._v("FocusEvent")])]),e._v(" "),v("li",[v("code",[e._v("GamepadEvent")])]),e._v(" "),v("li",[v("code",[e._v("HashChangeEvent")])]),e._v(" "),v("li",[v("code",[e._v("IDBVersionChangeEvent")])]),e._v(" "),v("li",[v("code",[e._v("InputEvent")])]),e._v(" "),v("li",[v("code",[e._v("KeyboardEvent")])]),e._v(" "),v("li",[v("code",[e._v("MediaStreamEvent")])]),e._v(" "),v("li",[v("code",[e._v("MessageEvent")])]),e._v(" "),v("li",[v("code",[e._v("MouseEvent")])]),e._v(" "),v("li",[v("code",[e._v("MutationEvent")])]),e._v(" "),v("li",[v("code",[e._v("OfflineAudioCompletionEvent")])]),e._v(" "),v("li",[v("code",[e._v("OverconstrainedError")])]),e._v(" "),v("li",[v("code",[e._v("PageTransitionEvent")])]),e._v(" "),v("li",[v("code",[e._v("PaymentRequestUpdateEvent")])]),e._v(" "),v("li",[v("code",[e._v("PointerEvent")])]),e._v(" "),v("li",[v("code",[e._v("PopStateEvent")])]),e._v(" "),v("li",[v("code",[e._v("ProgressEvent")])]),e._v(" "),v("li",[v("code",[e._v("RelatedEvent")])]),e._v(" "),v("li",[v("code",[e._v("RTCDataChannelEvent")])]),e._v(" "),v("li",[v("code",[e._v("RTCIdentityErrorEvent")])]),e._v(" "),v("li",[v("code",[e._v("RTCIdentityEvent")])]),e._v(" "),v("li",[v("code",[e._v("RTCPeerConnectionIceEvent")])]),e._v(" "),v("li",[v("code",[e._v("SensorEvent")])]),e._v(" "),v("li",[v("code",[e._v("StorageEvent")])]),e._v(" "),v("li",[v("code",[e._v("SVGEvent")])]),e._v(" "),v("li",[v("code",[e._v("SVGZoomEvent")])]),e._v(" "),v("li",[v("code",[e._v("TimeEvent")])]),e._v(" "),v("li",[v("code",[e._v("TouchEvent")])]),e._v(" "),v("li",[v("code",[e._v("TrackEvent")])]),e._v(" "),v("li",[v("code",[e._v("TransitionEvent")])]),e._v(" "),v("li",[v("code",[e._v("UIEvent")])]),e._v(" "),v("li",[v("code",[e._v("UserProximityEvent")])]),e._v(" "),v("li",[v("code",[e._v("WebGLContextEvent")])]),e._v(" "),v("li",[v("code",[e._v("WheelEvent")])])]),e._v(" "),v("h2",{attrs:{id:"属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[e._v("#")]),e._v(" 属性")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("Event.prototype.bubbles")]),e._v(": 只读，返回一个布尔值，用来表示该事件是否会在"),v("code",[e._v("DOM")]),e._v("中冒泡。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.cancelBubble")]),e._v(": "),v("code",[e._v("Event.prototype.stopPropagation()")]),e._v("的历史别名，在事件处理器函数返回之前，将此属性的值设置为"),v("code",[e._v("true")]),e._v("，亦可阻止事件继续冒泡。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.cancelable")]),e._v(": 只读，返回一个布尔值，表示事件是否可以取消。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.composed")]),e._v(": 只读，返回一个布尔值，表示事件是否可以穿过"),v("code",[e._v("Shadow DOM")]),e._v("和常规"),v("code",[e._v("DOM")]),e._v("之间的隔阂进行冒泡。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.currentTarget")]),e._v(": 只读，对事件当前注册的目标的引用。这是一个当前计划将事件发送到的对象，它是有可能在重定向的过程中被改变的。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.deepPath")]),e._v(": 一个由事件流所经过的"),v("code",[e._v("DOM")]),e._v("节点组成的数组。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.defaultPrevented")]),e._v(": 只读，返回一个布尔值，表示"),v("code",[e._v("event.preventDefault()")]),e._v("方法是否取消了事件的默认行为。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.eventPhase")]),e._v(": 只读，表示事件流正被处理到了哪个阶段。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.explicitOriginalTarget")]),e._v(": 只读，事件的明确"),v("code",[e._v("explicit")]),e._v("原始目标，"),v("code",[e._v("Mozilla")]),e._v("专有属性。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.originalTarget")]),e._v(": 只读，重设目标前的事件原始目标，"),v("code",[e._v("Mozilla")]),e._v("专有属性。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.returnValue")]),e._v(": 旧版"),v("code",[e._v("Internet Explorer")]),e._v("引入的一个非标准历史属性，为保证依赖此属性的网页正常运作，此属性最终被收入规范，可用"),v("code",[e._v("Event.prototype.preventDefault()")]),e._v("与"),v("code",[e._v("event.defaultPrevented")]),e._v("代替，但由于已进入规范，也可以使用此属性。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.srcElement")]),e._v(": 旧版"),v("code",[e._v("Internet Explorer")]),e._v("对"),v("code",[e._v("event.target")]),e._v("的非标准别称，出于兼容原因，一些其他浏览器也支持此别称。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.target")]),e._v(": 只读，对事件原始目标的引用，这里的原始目标指最初派发"),v("code",[e._v("dispatch")]),e._v("事件时指定的目标。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.timeStamp")]),e._v(": 只读，事件创建时的时间戳，精度为毫秒，按照规范这个时间戳是"),v("code",[e._v("Unix")]),e._v("纪元起经过的毫秒数，但实际上在不同的浏览器中，对此时间戳的定义也有所不同，另外规范正在将其修改为"),v("code",[e._v("DOMHighResTimeStamp")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.type")]),e._v(": 只读，返回事件的类型，不区分大小写。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.isTrusted")]),e._v(": 只读，表示事件是由浏览器(例如用户点击)发起的，还是由脚本(使用事件创建方法例如"),v("code",[e._v("event.initEvent")]),e._v("发出的。")])]),e._v(" "),v("h2",{attrs:{id:"方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[e._v("#")]),e._v(" 方法")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("document.captureEvents()")]),e._v(": 创建一个新事件，如果使用此方法创建事件，则必须调用其自身的"),v("code",[e._v("initEvent()")]),e._v("方法，对其进行初始化。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.composedPath()")]),e._v(": 返回事件的路径(将在该对象上调用监听器)，如果阴影根节点"),v("code",[e._v("shadow root")]),e._v("创建时"),v("code",[e._v("ShadowRoot.mode")]),e._v("值为"),v("code",[e._v("closed")]),e._v("，那么路径不会包括该根节点下阴影树"),v("code",[e._v("shadow tree")]),e._v("的节点。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.initEvent()")]),e._v(": 为通过"),v("code",[e._v("createEvent()")]),e._v("创建的事件初始化，该方法对已经被派发的事件无效。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.preventDefault()")]),e._v(": 如果该默认事件可取消，则取消默认事件。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.stopImmediatePropagation()")]),e._v(": 如果多个事件监听器被附加到相同元素的相同事件类型上，当此事件触发时，它们会按其被添加的顺序被调用，如果在其中一个事件监听器中执行"),v("code",[e._v("stopImmediatePropagation()")]),e._v("，那么剩下的事件监听器都不会被调用。")]),e._v(" "),v("li",[v("code",[e._v("Event.prototype.stopPropagation")]),e._v(": 停止冒泡，阻止事件在"),v("code",[e._v("DOM")]),e._v("中继续冒泡。")])]),e._v(" "),v("h2",{attrs:{id:"每日一题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#每日一题"}},[e._v("#")]),e._v(" 每日一题")]),e._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("https://github.com/WindrunnerMax/EveryDay\n")])]),e._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[e._v("1")]),v("br")])]),v("h2",{attrs:{id:"参考"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("https://developer.mozilla.org/zh-CN/docs/Web/API/Event\n")])]),e._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[e._v("1")]),v("br")])])])}),[],!1,null,null,null);v.default=o.exports}}]);